// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateAspNetCore3._1.Models;

namespace RealEstateAspNetCore3._1.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.AdvPhoto", b =>
                {
                    b.Property<int>("AdvPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvId")
                        .HasColumnType("int");

                    b.Property<string>("AdvPhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AdvertisementAdvId")
                        .HasColumnType("int");

                    b.HasKey("AdvPhotoId");

                    b.HasIndex("AdvertisementAdvId");

                    b.ToTable("advPhotos");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Advertisement", b =>
                {
                    b.Property<int>("AdvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<bool>("Credit")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<string>("NumOfBath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumOfRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("AdvId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("TipTypeId");

                    b.ToTable("advertisements");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex("CityId");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Neighborhood", b =>
                {
                    b.Property<int>("NeighborhoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("NeighborhoodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NeighborhoodId");

                    b.HasIndex("DistrictId");

                    b.ToTable("neighborhoods");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Tip", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.AdvPhoto", b =>
                {
                    b.HasOne("RealEstateAspNetCore3._1.Models.Advertisement", "Advertisement")
                        .WithMany("AdvPhotos")
                        .HasForeignKey("AdvertisementAdvId");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Advertisement", b =>
                {
                    b.HasOne("RealEstateAspNetCore3._1.Models.Neighborhood", "Neighborhood")
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateAspNetCore3._1.Models.Tip", "Tip")
                        .WithMany()
                        .HasForeignKey("TipTypeId");
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.District", b =>
                {
                    b.HasOne("RealEstateAspNetCore3._1.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Neighborhood", b =>
                {
                    b.HasOne("RealEstateAspNetCore3._1.Models.District", "District")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateAspNetCore3._1.Models.Tip", b =>
                {
                    b.HasOne("RealEstateAspNetCore3._1.Models.Status", "Status")
                        .WithMany("Tips")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
